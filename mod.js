// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
import t from"@stdlib/string-base-replace-before";var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=Object.defineProperty,o=Object.prototype,n=o.toString,l=o.__defineGetter__,i=o.__defineSetter__,a=o.__lookupGetter__,u=o.__lookupSetter__;var c=function(){try{return r({},"x",{}),!0}catch(t){return!1}}()?e:function(t,r,e){var c,f,p,y;if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((f="value"in e)&&(a.call(t,r)||u.call(t,r)?(c=t.__proto__,t.__proto__=o,delete t[r],t[r]=e.value,t.__proto__=c):t[r]=e.value),p="get"in e,y="set"in e,f&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&l&&l.call(t,r,e.get),y&&i&&i.call(t,r,e.set),t};function f(t,r,e){c(t,r,{configurable:!1,enumerable:!1,writable:!1,value:e})}function p(t){return"string"==typeof t}var y="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function b(){return y&&"symbol"==typeof Symbol.toStringTag}var _=Object.prototype.toString;var s=Object.prototype.hasOwnProperty;var v="function"==typeof Symbol?Symbol.toStringTag:"";var g=b()?function(t){var r,e,o,n,l;if(null==t)return _.call(t);e=t[v],l=v,r=null!=(n=t)&&s.call(n,l);try{t[v]=void 0}catch(r){return _.call(t)}return o=_.call(t),r?t[v]=e:delete t[v],o}:function(t){return _.call(t)},m=String.prototype.valueOf;var d=b();function j(t){return"object"==typeof t&&(t instanceof String||(d?function(t){try{return m.call(t),!0}catch(t){return!1}}(t):"[object String]"===g(t)))}function w(t){return p(t)||j(t)}function S(){var t,r=arguments,e=r[0],o="https://stdlib.io/e/"+e+"?";for(t=1;t<r.length;t++)o+="&arg[]="+encodeURIComponent(r[t]);return o}function h(r,e,o){if(!p(r))throw new TypeError(S("null3R",r));if(!p(e))throw new TypeError(S("null3L",e));if(!p(o))throw new TypeError(S("nullB6",o));return t(r,e,o)}f(w,"isPrimitive",p),f(w,"isObject",j);export{h as default};
//# sourceMappingURL=mod.js.map
